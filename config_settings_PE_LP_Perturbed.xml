<root>
    <config>
        <general>
            <!-- Configuration string that may be added to distinguish different configuration -->
            <config_str>PE</config_str>
            <!-- Whether calculations should be performed in 2D (True) or 3D (False). Default: False -->
            <by_slice>True</by_slice>
        </general>
        <img_interpolate>
            <!-- Controls whether interpolation is performed at all. -->
            <interpolate>True</interpolate>
            <!-- Sets the order of the interpolation spline. It can be 0 (nearest neighbour), 1 (linear),2 ,3 (cubic), 4, 5 -->
            <spline_order>3</spline_order>
            <!-- Uniform voxel sizes for interpolation. Units are defined by the headers of the image files. Every value represents the spacing that will be applied in all directions -->
            <new_spacing>1.0</new_spacing>
            <!-- Non-uniform voxel spacing. Requires 3 values for z, y, and x directions. -->
            <new_non_iso_spacing></new_non_iso_spacing>
            <!-- Anti-aliasing filter to reduce aliasing artefacts when down-sampling. Enabled by default (True). -->
            <anti_aliasing></anti_aliasing>
            <!-- Smoothing parameter beta for anti-aliasing filter. Must be in range (0.0, 1.0]. At 1.0 no anti-aliasing is performed. Default is 0.95. -->
            <smoothing_beta></smoothing_beta>
        </img_interpolate>
        <roi_interpolate>
            <!-- Sets the order of the interpolation spline. It can be 0 (nearest neighbour), 1 (linear), 2 (cubic), 3, 4, 5. Nearest neighbour or linear interpolation (default) are recommended. -->
            <spline_order>1</spline_order>
            <!-- Threshold for ROIS with partial volumes after interpolation. Default: 0.5 -->
            <incl_threshold></incl_threshold>
        </roi_interpolate>
        <post_processing>
            <!-- Type of algorithm used to produce an approximate mask of the tissue. Can be none, range (requires intensity values), relative_range (default; requires fractions). -->
            <tissue_mask_type></tissue_mask_type>
            <!-- Range values for creating an approximate mask of the tissue. Required for range and relative range options. Default: 0.02, 1.0 (relative_range); 0.0, nan (range; effectively none) -->
            <tissue_mask_range></tissue_mask_range>
            <!-- Whether N4 bias field correction should be performed. Disabled by default (False); only applicable to MR imaging. If a tissue mask is created, this is used to determine  -->
            <bias_field_correction></bias_field_correction>
            <!-- Number of fitting levels for N4 bias field correction. Default: 3 -->
            <n_fitting_levels></n_fitting_levels>
            <!-- Max number of iterations for each of the fitting levels for N4 bias field correction. Default: 100, 100, 100 -->
            <n_max_iterations></n_max_iterations>
            <!-- Convergence threshold for N4 bias field correction. Default: 0.001 -->
            <convergence_threshold></convergence_threshold>
            <!-- Algorithm used to normalise intensities in the image. Will use only intensities in voxels masked by the tissue mask. Can be none (default), range (maps to an intensity range), relative_range (maps to a range of relative intensities), quantile_range (maps to a range of relative intensities based on intensity percentiles),  standardisation (performs z-normalisation). -->
            <intensity_normalisation></intensity_normalisation>
            <!-- Intensity range for range, relative_range and quantile_range normalisation. -->
            <intensity_normalisation_range></intensity_normalisation_range>
            <!-- Intensity saturation after normalisation. Values outside the given range are limited to this range. You may define two values for lower and upper boundary respectively. Default: [np.nan, np.nan] (no saturation). -->
            <intensity_normalisation_saturation></intensity_normalisation_saturation>
        </post_processing>
        <vol_adapt>
            <!-- Whether the image may be cut to only maintain the interesting parts. Default: False. Setting this to True speeds up calculations and saves memory. -->
            <resect></resect>
            <!-- Distance (in mm) around the ROI mask that should be maintained when cropping. Default: 150 mm. -->
            <crop_distance></crop_distance>
            <!-- Number of times noise is randomly added to the image. Used in noise addition image perturbations. Default: 0, for PE project use 1 -->
            <noise_repetitions>1</noise_repetitions>
            <!-- Manually provided noise level in intensity units. If left unset, noise is determined from the image itself. -->
            <noise_level></noise_level>
            <!-- Angles (in degrees) over which the image and mask are rotated. This rotation is only in the x-y (axial) plane. Used in the rotation image perturbation. Default: 0.0. for PE_CT suggested -10,-5,0,5,10-->
            <rot_angles>-10,-5,0,5,10</rot_angles>
            <!-- Sub-voxel translation distance fractions of the interpolation grid. This forces the interpolation grid to shift slightly and interpolate at different points. Used in translation perturbations. Default: 0.0.-->
            <translate_frac></translate_frac>
            <!-- Growth/shrinkage of the ROI mask. Interpretations depends on the roi_adapt_size tag. If "distance": growth/shrinkage in world dimension units. If "fraction": growth/shrinkage in volume fraction. Default: 0.0 (no changes)-->
            <roi_adapt_size></roi_adapt_size>
            <!-- Type of growth/shrinkage. Can be either fraction or distance (default). fraction is used in the volume growth/shrinkage image perturbation. -->
            <roi_adapt_type></roi_adapt_type>
            <!-- Limit to shrinkage of the ROI by distance-based adaptations. Fraction of the original volume. Default: 0.8 (but not used unless roi_adapt_size!=0.0 and roi_adapt_type=distance) -->
            <eroded_vol_fract></eroded_vol_fract>
            <!-- Supervoxel-based contour randomisation repetitions for image perturbation. Default: 0 -->
            <roi_random_rep></roi_random_rep>
            <!-- There are several settings for roi bulk/rim and heterogeneity-based supervoxel selection that are not documented here. -->
        </vol_adapt>
        <roi_resegment>
            <!-- ROI re-segmentation method for intensity-based re-segmentation. Options are threshold, range, sigma and outlier. Multiple options can be provided,
            and re-segmentation will take place in the given order. "threshold" and "range" are synonyms, as well as "sigma" and "outlier".
            If left unset, no re-segmentation is performed.-->
            <method>threshold</method>
            <!-- Intensity threshold for threshold-based re-segmentation (threshold and range). If set, requires two values for lower and upper range respectively.
            The upper range value can also be nan for half-open ranges. from following publication https://onlinelibrary.wiley.com/doi/10.1111/apha.12224-->
            <g_thresh>-110,150</g_thresh>
            <!-- Number of standard deviations for outlier-based intensity re-segmentation. 3 is a common setting. -->
            <sigma></sigma>
        </roi_resegment>
        <feature_extr>
            <!-- Set of feature families to be computed from the image. Default is all. -->
            <families></families>
            <!-- Discretisation algorithm. Can be none (default), fixed_bin_number and/or fixed_bin_size. Combinations are possible.-->
            <discr_method>fixed_bin_number</discr_method>
            <!-- Bin width (in intensity units) for the fixed_bin_size algorithm. Multiple values are possible. -->
            <discr_bin_width></discr_bin_width>
            <!-- Bin number for the fixed_bin_number algorithm. Multiple values are possible. -->
            <discr_n_bins>24</discr_n_bins>
            <!-- Discretisation algorithm for the intensity-volume histogram. Can be none, fixed_bin_number and/or fixed_bin_size. If unset, the image modality determines the algorithm.-->
            <ivh_discr_method>fixed_bin_number</ivh_discr_method>
            <!-- Bin number for the fixed_bin_number algorithm. Default: 1000 -->
            <ivh_discr_n_bins></ivh_discr_n_bins>
            <!-- Bin width (in intensity units) for the fixed_bin_size algorithm. -->
            <ivh_discr_bin_width></ivh_discr_bin_width>
            <!-- Distance (in voxels) for GLCM for determining the neighbourhood. -->
            <glcm_dist>1.0</glcm_dist>
            <!-- Calculate GLCM in 2D (2d) 2.5D (2.5d) or 3D (3d). Default: same as general/by_slice. -->
			<glcm_spatial_method>2d</glcm_spatial_method>
            <!-- How to treat the texture matrices. Can be average (features are calculated from all matrices, then averaged), slice_merge (matrices in the same slice are combined,
            features calculated and then averaged), dir_merge (matrices with the same direction are combined, features calculated and then averaged) and/or vol_merge (all matrices are combined and a single feature is calculated). -->
			<glcm_merge_method>slice_merge</glcm_merge_method>
            <!-- Calculate GLRLM in 2d, 2.5d or 3d. Default: same as general/by_slice. -->
			<glrlm_spatial_method>2d</glrlm_spatial_method>
            <!-- How to treat the texture matrices. Can be average (features are calculated from all matrices, then averaged), slice_merge (matrices in the same slice are combined,
            features calculated and then averaged) and/or vol_merge (all matrices are combined and a single feature is calculated). -->
			<glrlm_merge_method>slice_merge</glrlm_merge_method>
            <!-- Calculate GLSZM in 2d, 2.5d or 3d. Default: same as general/by_slice. -->
			<glszm_spatial_method>2d</glszm_spatial_method>
            <!-- Calculate GLDZM in 2d, 2.5d or 3d. Default: same as general/by_slice. -->
			<gldzm_spatial_method>2d</gldzm_spatial_method>
            <!-- Calculate NGTDM in 2d, 2.5d or 3d. Default: same as general/by_slice. -->
			<ngtdm_spatial_method>2d</ngtdm_spatial_method>
            <!-- Distance (in voxels) for NGLDM for determining the neighbourhood. -->
            <ngldm_dist>1.8</ngldm_dist>
            <!-- Difference level (alpha) for NGLDM -->
            <ngldm_diff_lvl>0.0</ngldm_diff_lvl>
            <!-- Calculate NGLDM in 2d, 2.5d or 3d. Default: same as general/by_slice. -->
			<ngldm_spatial_method>2d</ngldm_spatial_method>
        </feature_extr>
        <img_transform>
            <!-- General flag for image transformation. Default: False -->
            <perform_img_transform>True</perform_img_transform>
            <!-- Boundary conditions, i.e. how to calculate the filter response for voxels that are less than the filter width removed from the volume edge. -->
            <boundary_condition></boundary_condition>
            <!-- Spatial filters to apply. Options: wavelet, laplacian_of_gaussian, laws, mean -->
            <spatial_filters>laplacian_of_gaussian</spatial_filters>
            <!-- Wavelet filter to be used. The name must match a wavelet implemented in pyWavelets. -->
            <wavelet_fam></wavelet_fam>
            <!-- Create rotationally invariant wavelet response maps; True or False -->
            <wavelet_rot_invar></wavelet_rot_invar>
            <!-- Create stationary wavelets; True (default) or False (decimation will take place) -->
            <wavelet_stationary></wavelet_stationary>
            <!-- Laplacian of Gaussian sigma (in world space units). This specifies the width of the Gaussian filter by its standard deviation default for CT 1.0,2.0,3.0,4.0,5.0. -->
            <log_sigma>1.0,2.0,3.0,4.0,5.0</log_sigma>
            <!-- Number of standard deviations to allow before truncating the Gaussian filter -->
            <log_sigma_truncate></log_sigma_truncate>
            <!-- Whether to average over laplacian of gaussian images for different scales; True or False -->
            <log_average>True</log_average>
            <!-- Calculate laws texture energy image, or just the response map; True (default) or False -->
            <laws_calculate_energy></laws_calculate_energy>
            <!-- Create rotationally invariant laws kernel response maps or energy images; True (default) or False -->
            <laws_rot_invar>False</laws_rot_invar>
            <!-- Calculate specific laws kernels; all (default) or specific combinations, e.g. L5S5E5, E5E5E5-->
            <laws_kernel></laws_kernel>
            <!-- Delta for chebyshev distance between center voxel and neighbourhood boundary used to calculate texture energy: integer, default: 7-->
            <laws_delta></laws_delta>
            <!-- Filter size for mean filter. -->
            <mean_filter_size></mean_filter_size>
        </img_transform>
    </config>
</root>